// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResolveEntity.resolveEntity inputType - throws error if inputType does not pass 1`] = `
[Error: Entity type check failed!
Expected type: number
Actual type: string
Input value: 'foo']
`;

exports[`ResolveEntity.resolveEntity outputType fails if error method catches typeCheck errors and returns bad value 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 2]
`;

exports[`ResolveEntity.resolveEntity outputType is bypassed if error throws error 1`] = `[Error: error from before method]`;

exports[`ResolveEntity.resolveEntity outputType throws error if after method returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if after middleware returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if before method returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if custom typeCheck fails 1`] = `[Error: custom type error]`;

exports[`ResolveEntity.resolveEntity outputType throws error if global after middleware returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if global before middleware returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if middleware before returns value that does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws error if value does not pass typeCheck 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;

exports[`ResolveEntity.resolveEntity outputType throws if error method does not return value with correct type 1`] = `
[Error: Entity type check failed!
Expected type: string
Actual type: number
Input value: 1]
`;
